//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace kk.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IProductosService")]
    public interface IProductosService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/GetAll", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/GetAllResponse")]
        System.Collections.ObjectModel.ObservableCollection<Entidades.Producto> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/GetAll", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Entidades.Producto>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/GetById", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/GetByIdResponse")]
        Entidades.Producto GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/GetById", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/GetByIdResponse")]
        System.Threading.Tasks.Task<Entidades.Producto> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/Add", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/AddResponse")]
        void Add(Entidades.Producto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/Add", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/AddResponse")]
        System.Threading.Tasks.Task AddAsync(Entidades.Producto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/Remove", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/RemoveResponse")]
        void Remove(Entidades.Producto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/Remove", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(Entidades.Producto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/RemoveById", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/RemoveByIdResponse")]
        void RemoveById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/RemoveById", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/RemoveByIdResponse")]
        System.Threading.Tasks.Task RemoveByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/Modify", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/ModifyResponse")]
        void Modify(Entidades.Producto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CRUDServiceOf_Producto_Int32/Modify", ReplyAction="http://tempuri.org/CRUDServiceOf_Producto_Int32/ModifyResponse")]
        System.Threading.Tasks.Task ModifyAsync(Entidades.Producto item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductosServiceChannel : kk.ServiceReference1.IProductosService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductosServiceClient : System.ServiceModel.ClientBase<kk.ServiceReference1.IProductosService>, kk.ServiceReference1.IProductosService {
        
        public ProductosServiceClient() {
        }
        
        public ProductosServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductosServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductosServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductosServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Entidades.Producto> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Entidades.Producto>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public Entidades.Producto GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<Entidades.Producto> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public void Add(Entidades.Producto item) {
            base.Channel.Add(item);
        }
        
        public System.Threading.Tasks.Task AddAsync(Entidades.Producto item) {
            return base.Channel.AddAsync(item);
        }
        
        public void Remove(Entidades.Producto item) {
            base.Channel.Remove(item);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(Entidades.Producto item) {
            return base.Channel.RemoveAsync(item);
        }
        
        public void RemoveById(int id) {
            base.Channel.RemoveById(id);
        }
        
        public System.Threading.Tasks.Task RemoveByIdAsync(int id) {
            return base.Channel.RemoveByIdAsync(id);
        }
        
        public void Modify(Entidades.Producto item) {
            base.Channel.Modify(item);
        }
        
        public System.Threading.Tasks.Task ModifyAsync(Entidades.Producto item) {
            return base.Channel.ModifyAsync(item);
        }
    }
}
